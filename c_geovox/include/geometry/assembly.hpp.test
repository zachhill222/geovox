#ifndef ASSEMBLY_H
#define ASSEMBLY_H

#define PARTICLE_OCTREE_MAX_DATA_PER_LEAF 6


#include "util/point.hpp"
#include "util/box.hpp"
#include "util/octree.hpp"

#include "geometry/particles.hpp"
#include "geometry/collisions.hpp"

#include "mesh/vtk_linear.hpp"
#include "mesh/vtk_convex_cell.hpp"
#include "mesh/mesh.hpp"
#include "mesh/nodes.hpp"

#include <vector>
#include <map>
#include <initializer_list>
#include <iostream>
#include <fstream>
#include <string>
#include <sstream>



using Point3 = GeoVox::util::Point<3>;
using Box = GeoVox::util::Box;
using Mesh = GeoVox::mesh::Mesh;
using SuperEllipsoid = GeoVox::geometry::SuperEllipsoid;

namespace GeoVox::geometry{
	class AssemblyNode;
	class Assembly;
	using OctreeNode = GeoVox::util::OctreeNode<Assembly, AssemblyNode, long unsigned int>;


	class AssemblyNode : public OctreeNode{
	public:
		AssemblyNode() : OctreeNode(true) {}

		AssemblyNode(const Box& box, const long unsigned int ID, unsigned int (&ijk)[3], unsigned int depth, Assembly* root, bool multiple_data) : 
			OctreeNode(box, ID, ijk, depth, root, true) {}
		
		bool data_valid(const long unsigned int& p_idx) const override;
		int nvert() const;
	};


	class Assembly : public AssemblyNode {
	public:
		Assembly() : AssemblyNode(), max_data_per_leaf(PARTICLE_OCTREE_MAX_DATA_PER_LEAF), _nleaves(1) { //unsure why max_data_per_leaf can't be 2
			_root = this;
		}

		Assembly(const std::string particle_file) : AssemblyNode(), max_data_per_leaf(PARTICLE_OCTREE_MAX_DATA_PER_LEAF), _nleaves(1) {
			_root = this;
			readfile(particle_file);
			for (long unsigned int i=0; i<particles.size(); i++){
				// insert_data(particles[i]);
				insert_data(i);
			}
		}

		bool in_particle(const Point3& point) const;
		void readfile(const std::string fullfile);
		void save_geometry(const std::string filename, const Box& box, const int N[3]) const;
		inline void save_geometry(const std::string filename, const int N[3]) const {save_geometry(filename, box, N);}

		std::vector<SuperEllipsoid> particles;

		const long unsigned int max_data_per_leaf;

		long unsigned int _nleaves;
	protected:
		void _setbbox();
	};
}








#endif